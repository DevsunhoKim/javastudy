/*
 * 연산자
 * -----
 * => 결과값 (데이터형 사용)
 * 
 * 1) 피연산자 / 연산자
 *    ----- 연산 대상
 *    
 *    1개 => 단항연산자 ++a , !a , (char)10
 *    		 - 증감연산자
 *    		   -------
 *                |
 *               ++,-- => 1 증가, 1감소  
 *               
 *               전치연산자 : 먼저 증가 => 다른 연산 수행
 *               후치연산자 : 다른연산 수행 => 증가
 *    		 - 부정연산자
 *    		   boolean bCheck=false;
 *             !bCheck => true
 *             
 *             String s="aaa";
 *             s.replace('a','b') ==> "bbb"
 *             s="aaa"
 *             
 *    	     - 형변환연산자
 *    			--------------boolean 생략
 *    2개 => 이항연산자 a+b
 *    		- 산술연산자
 *    			+ , - , * , / , %
 *    			==> 장바구니
 *    			==> '+' => 문자열 결합 기능 (int 이하 데이터형 연산시 int)
 *    			==> '/" ==> 0으로 나눌수 없음, 정수/정수
 *    			==> '%' ==> 왼쪽수의 부호가 남는다 (+,-)
 *    		- 비교연산자
 *    		    == , != , < , > <= , >=  ==> 결과 boolean
 *    				=> 문자열은 비교할 수 없다
 *    		- 논리연산자   && , ||
 *    			=> '&&' 범위지정 , 기간 조건 
 *    				 (조건1)  &&  (조건2)
 *    					= 조건 1이 false 이면 조건2는 수행하지 않는다.
 *    					==> 효율적인 연산
 *    
 *    			=> '||' => 둘 중 하나가 true 이면 true
 *    			   사용처 : 오류처리 , 벗어난 범위
 *    			=> 조건1 이 true 이면 조건 2는 수행하지 않는다
 *    					==> 효율적인 연산 
 *    		- 대입연산자
 *    			= , += , -=
 *    		
 *              '+='  
 *              int a=10;
 *              a+=1;  ==> a=a+1 => a=11
 *              a+=2 , a+=3 ....
 *              
 *    3개 => 삼항연산자 (조건)?값1:값2
 *    				----
 *     				true = 값1
 *     				false = 값2
 *     	====> if~else 문으로 대체가능
 * 
 * 
 */
package 자바2주차_정리;

public class 연산자정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		/*
		boolean bCheck =false;
		if(!bCheck)
		{
			System.out.println("출력");
		}
		System.out.println(bCheck);
		*/
		
		/*
		byte b1=10;
		byte b2=20;
		byte b3=b1+b2;   //=> int 이하 연산은 int로 출력
		*/
	}

}

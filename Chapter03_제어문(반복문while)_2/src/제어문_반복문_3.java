/*
 *  변수 => 데이터형 , 식별자 (암기)
 *      => 한 개의 데이터를 저장하는 메모리 공간
 *      	(저장된 영역은 변경해서 다시 저장이 가능)
 *      => 변수의 기능 (읽기(값 가지고 온다) / 쓰기(메모리에 저장,수정))
 *      => 변수를 저장하기 위해서는 먼저 메모리 크기 결정
 *         ---------------------------------
 *                                  |
 *                                  기본형(데이터형)
 *                                  참조형(사용자 정의) : 배열, 클래스
 *      => 기본형
 *         정수
 *         	byte(1byte)
 *         	int(4byte)
 *          long(8byte) => 구분 100L
 *          ----------------------------
 *          컴퓨터가 모든 숫자는 int
 *         실수
 *         	double(8byte) =>15자리
 *         문자
 *          char(2byte)=>0~65535
 *          --------- ASC VS Unicode (*****)
 *         논리
 *         	boolean(1byte) => true/false 만 저장가능
 *         -----------------------------------------
 *     변수 활용 (프로그램 => 데이터관리)
 *     변수 활용 방법 => 연산자 제어문
 *     연산자
 *     	= 단항 연산자 (++,--,!(데이터형))
 *      = 이항 연산자
 *      	= +,*,*,/,%
 *      = == ,!= , < , > ,<= , >=
 *      = && , ||
 *      = += ,-= ,-=
 *      
 *      =삼항 연산자
 *      	= ? :
 *      => 자동 형변환 , 강제 형변환
 *      => + 문자열 결합
 *      ------------------------
 *      프로그램 흐름제어
 *      => 오류 발생시 건너 뛴다 ==> (if)
 *      => 원하는 프로그램 수행 : if ,switch
 *      => 반복 수행 : for , while
 *      => 제어문 
 *      	**** 조건문
 *      단일
 *      if(조건문)=> 조건문은 반드시 => 비교,부정,논리 연산자
 *      {
 *       true 일때 수행
 *      }
 *      =선택
 *      if(조건문)
 *      {
 *        조건이 true일때 수행
 *      }
 *      else
 *      {
 *        조건이 false 일때 수행
 *      }
 *      다중 => 여러개의 조건문 중에 한개 수행이 가능
 *      if(조건문)
 *      {
 *        조건이 true일때 수행 
 *        false 일때는 밑에있는 조건문을 찾아간다
 *      }
 *      else if
 *      {
 *              조건이 true일때 수행 
 *        false 일때는 밑에있는 조건문을 찾아간다
 *      }
 *      ...
 *      ...
 *      else
 *      {
 *      	해당 조건이 없으면 수행
 *      }
 *      선택문
 *      switch(정수,문자,문자열)
 *      {
 *       case 값:
 *       처리문장
 *       break;
 *       case 값:
 *       처리문장
 *       break;
 *       default:
 *       처리문장 => 필요시 사용
 *       }
 * ***반복문
 * 	for(초기값,조건식,증감식)
 * 	{
 *     반복수행 문장
 *   }
 *   
 *  while 문
 *  
 *   초기값
 *   while(조건문)
 *   {
 *      반복수행문자
 *      증감식
 *   }
 *         
 */
public class 제어문_반복문_3 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
